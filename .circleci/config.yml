version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: oldstarchy/dashbot
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test-source:
    description: "ESLint source files"
    docker:
      - image: node:14
    steps:
      - checkout
      - run:
          name: Lint TS / JS
          command: |
            yarn install
            yarn lint
      - run:
          name: Test TS
          command: |
            yarn build
            yarn coverage
  test-docker:
    description: "lint-dockerfile << parameters.container-image >>"
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Lint Dockerfile
          command: |
            docker run --rm -i hadolint/hadolint /bin/hadolint - < ./Dockerfile
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
      - run:
          name: Deploy
          command: |
            echo "$DEPLOY_HOST_ECDSA" >> ~/.ssh/known_hosts
            ssh $DEPLOY_HOST './dashbot-restart.sh'
workflows:
  main:
    jobs:
      - test-source
      - test-docker
      - build:
          requires:
            - test-source
            - test-docker
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master
